# -*- coding:utf-8 -*-
import pytest
from metafanstatic.semver import SemverVersion

eq_cands = [
    ['1.2.3', 'v1.2.3', True],
    ['1.2.3', '=1.2.3', True],
    ['1.2.3', 'v 1.2.3', True],
    ['1.2.3', '= 1.2.3', True],
    ['1.2.3', ' v1.2.3', True],
    ['1.2.3', ' =1.2.3', True],
    ['1.2.3', ' v 1.2.3', True],
    ['1.2.3', ' = 1.2.3', True],
    ['1.2.3-0', 'v1.2.3-0', True],
    ['1.2.3-0', '=1.2.3-0', True],
    ['1.2.3-0', 'v 1.2.3-0', True],
    ['1.2.3-0', '= 1.2.3-0', True],
    ['1.2.3-0', ' v1.2.3-0', True],
    ['1.2.3-0', ' =1.2.3-0', True],
    ['1.2.3-0', ' v 1.2.3-0', True],
    ['1.2.3-0', ' = 1.2.3-0', True],
    ['1.2.3-1', 'v1.2.3-1', True],
    ['1.2.3-1', '=1.2.3-1', True],
    ['1.2.3-1', 'v 1.2.3-1', True],
    ['1.2.3-1', '= 1.2.3-1', True],
    ['1.2.3-1', ' v1.2.3-1', True],
    ['1.2.3-1', ' =1.2.3-1', True],
    ['1.2.3-1', ' v 1.2.3-1', True],
    ['1.2.3-1', ' = 1.2.3-1', True],
    ['1.2.3-beta', 'v1.2.3-beta', True],
    ['1.2.3-beta', '=1.2.3-beta', True],
    ['1.2.3-beta', 'v 1.2.3-beta', True],
    ['1.2.3-beta', '= 1.2.3-beta', True],
    ['1.2.3-beta', ' v1.2.3-beta', True],
    ['1.2.3-beta', ' =1.2.3-beta', True],
    ['1.2.3-beta', ' v 1.2.3-beta', True],
    ['1.2.3-beta', ' = 1.2.3-beta', True],
    ['1.2.3-beta+build', ' = 1.2.3-beta+otherbuild', False],
    ['1.2.3+build', ' = 1.2.3+otherbuild', False],
    (['1.2.3-beta+build', '1.2.3-beta+otherbuild', False]),
    (['1.2.3+build', '1.2.3+otherbuild', False]),
    (['  v1.2.3+build', '1.2.3+otherbuild', False])
]


def eq(x, y):
    return SemverVersion(x) == SemverVersion(y)


def gt(x, y):
    return SemverVersion(x) > SemverVersion(y)


def lt(x, y):
    return SemverVersion(x) < SemverVersion(y)


@pytest.mark.parametrize("version0, version1, expected", eq_cands)
def test_eq_comparision(version0, version1, expected):
    assert eq(version0, version1) is expected


#  [version1, version2]
#  version1 should be greater than version2
cands = [
    ['0.0.0', '0.0.0-foo', True],
    ['0.0.1', '0.0.0', True],
    ['1.0.0', '0.9.9', True],
    ['0.10.0', '0.9.0', True],
    ['0.99.0', '0.10.0', True],
    ['2.0.0', '1.2.3', True],
    ['v0.0.0', '0.0.0-foo', True],
    ['v0.0.1', '0.0.0', True],
    ['v1.0.0', '0.9.9', True],
    ['v0.10.0', '0.9.0', True],
    ['v0.99.0', '0.10.0', True],
    ['v2.0.0', '1.2.3', True],
    ['0.0.0', 'v0.0.0-foo', True],
    ['0.0.1', 'v0.0.0', True],
    ['1.0.0', 'v0.9.9', True],
    ['0.10.0', 'v0.9.0', True],
    ['0.99.0', 'v0.10.0', True],
    ['2.0.0', 'v1.2.3', True],
    ['1.2.3', '1.2.3-asdf', True],
    ['1.2.3', '1.2.3-4', True],
    ['1.2.3', '1.2.3-4-foo', True],
    ['1.2.3-5-foo', '1.2.3-5', True],
    ['1.2.3-5', '1.2.3-4', True],
    ['1.2.3-5-foo', '1.2.3-5-Foo', True],
    ['3.0.0', '2.7.2+asdf', True],
    ['1.2.3-a.10', '1.2.3-a.5', True],
    ['1.2.3-a.b', '1.2.3-a.5', True],
    ['1.2.3-a.b', '1.2.3-a', True],
    ['1.2.3-a.b.c.10.d.5', '1.2.3-a.b.c.5.d.100', True]
]


@pytest.mark.parametrize("version0, version1, expected", cands)
def test_gt_comparision(version0, version1, expected):
    assert gt(version0, version1) is expected
    assert lt(version0, version1) is not expected


# parse
parse_cands = [
    ['1.0.0 - 2.0.0', ['1.0.0', '-', '2.0.0']],
    ['1.0.0', ['1.0.0']],
    ['>=*', ['>=', '*']],
    ['', []],
    ['*', ['*']],
    ['*', ['*']],
    ['>=1.0.0', ['>=', '1.0.0']],
    ['>=1.0.0', ['>=', '1.0.0']],
    ['>=1.0.0', ['>=', '1.0.0']],
    ['>1.0.0', ['>', '1.0.0']],
    ['>1.0.0', ['>', '1.0.0']],
    ['<=2.0.0', ['<=', '2.0.0']],
    ['<=2.0.0', ['<=', '2.0.0']],
    ['<=2.0.0', ['<=', '2.0.0']],
    ['<2.0.0', ['<', '2.0.0']],
    ['<2.0.0', ['<', '2.0.0']],
    ['>= 1.0.0', ['>=', '1.0.0']],
    ['>=  1.0.0', ['>=', '1.0.0']],
    ['>=   1.0.0', ['>=', '1.0.0']],
    ['> 1.0.0', ['>', '1.0.0']],
    ['>  1.0.0', ['>', '1.0.0']],
    ['<=   2.0.0', ['<=', '2.0.0']],
    ['<= 2.0.0', ['<=', '2.0.0']],
    ['<=  2.0.0', ['<=', '2.0.0']],
    ['<    2.0.0', ['<', '2.0.0']],
    ['<\t2.0.0', ['<', '2.0.0']],
    ['>=0.1.97', ['>=', '0.1.97']],
    ['>=0.1.97', ['>=', '0.1.97']],
    ['0.1.20 || 1.2.4', ['0.1.20', '||', '1.2.4']],
    ['>=0.2.3 || <0.0.1', ['>=', '0.2.3', '||', '<', '0.0.1']],
    ['>=0.2.3 || <0.0.1', ['>=', '0.2.3', '||', '<', '0.0.1']],
    ['>=0.2.3 || <0.0.1', ['>=', '0.2.3', '||', '<', '0.0.1']],
    ['||', ['||']],
    ['2.x.x', ['2.x.x']],
    ['1.2.x', ['1.2.x']],
    ['1.2.x || 2.x', ['1.2.x', '||', '2.x']],
    ['1.2.x || 2.x', ['1.2.x', '||', '2.x']],
    ['x', ['x']],
    ['2.*.*', ['2.*.*']],
    ['1.2.*', ['1.2.*']],
    ['1.2.* || 2.*', ['1.2.*', '||', '2.*']],
    ['1.2.* || 2.*', ['1.2.*', '||', '2.*']],
    ['*', ['*']],
    ['2', ['2']],
    ['2.3', ['2.3']],
    ['~2.4', ['~', '2.4']],
    ['~2.4', ['~', '2.4']],
    ['~>3.2.1', ['~', '>', '3.2.1']],
    ['~1', ['~', '1']],
    ['~>1', ['~', '>', '1']],
    ['~> 1', ['~', '>', '1']],
    ['~1.0', ['~', '1.0']],
    ['~ 1.0', ['~', '1.0']],
    ['~ 1.0.3', ['~', '1.0.3']],
    ['>=1', ['>=', '1']],
    ['>= 1', ['>=', '1']],
    ['<1.2', ['<', '1.2']],
    ['< 1.2', ['<', '1.2']],
    ['1', ['1']],
    ['~v0.5.4-pre', ['~', 'v0.5.4-pre']],
    ['~v0.5.4-pre', ['~', 'v0.5.4-pre']],
    ['=0.7.x', ['=', '0.7.x']],
    ['>=0.7.x', ['>=', '0.7.x']],
    ['=0.7.x', ['=', '0.7.x']],
    ['>=0.7.x', ['>=', '0.7.x']],
    ['<=0.7.x', ['<=', '0.7.x']],
    ['~1.2.1 >=1.2.3', ['~', '1.2.1', '>=', '1.2.3']],
    ['~1.2.1 =1.2.3', ['~', '1.2.1', '=', '1.2.3']],
    ['~1.2.1 1.2.3', ['~', '1.2.1', '1.2.3']],
    ['~1.2.1 >=1.2.3 1.2.3', ['~', '1.2.1', '>=', '1.2.3', '1.2.3']],
    ['~1.2.1 1.2.3 >=1.2.3', ['~', '1.2.1', '1.2.3', '>=', '1.2.3']],
    ['~1.2.1 1.2.3', ['~', '1.2.1', '1.2.3']],
    ['>=1.2.1 1.2.3', ['>=', '1.2.1', '1.2.3']],
    ['1.2.3 >=1.2.1', ['1.2.3', '>=', '1.2.1']],
    ['>=1.2.3 >=1.2.1', ['>=', '1.2.3', '>=', '1.2.1']],
    ['>=1.2.1 >=1.2.3', ['>=', '1.2.1', '>=', '1.2.3']],
    ['<=1.2.3', ['<=', '1.2.3']],
    ['>1.2', ['>', '1.2']],
    ['>=1.2', ['>=', '1.2']],
    ['^1.2.3', ['^', '1.2.3']],
    ['^1.2.3', ['^', '1.2.3']],
    ['^0.1.2', ['^', '0.1.2']],
    ['^0.1', ['^', '0.1']],
    ['^1.2', ['^', '1.2']],
    ['^1.2 ^1', ['^', '1.2', '^', '1']],
    ['^1.2', ['^', '1.2']],
    ['^1.2.3', ['^', '1.2.3']],
]


@pytest.mark.parametrize("expr, expected", parse_cands)
def test_parse(expr, expected):
    from metafanstatic.semver import parse
    assert parse(expr) == expected


# // [range, version]
# // version should be included by range
range_cands = [
    ['1.0.0 - 2.0.0', '1.2.3', True],
    ['1.0.0', '1.0.0', True],
    ['>=*', '0.2.4', True],
    ['', '1.0.0', True],
    ['*', '1.2.3', True],
    ['*', 'v1.2.3-foo', True],
    ['>=1.0.0', '1.0.0', True],
    ['>=1.0.0', '1.0.1', True],
    ['>=1.0.0', '1.1.0', True],
    ['>1.0.0', '1.0.1', True],
    ['>1.0.0', '1.1.0', True],
    ['<=2.0.0', '2.0.0', True],
    ['<=2.0.0', '1.9999.9999', True],
    ['<=2.0.0', '0.2.9', True],
    ['<2.0.0', '1.9999.9999', True],
    ['<2.0.0', '0.2.9', True],
    ['>= 1.0.0', '1.0.0', True],
    ['>=  1.0.0', '1.0.1', True],
    ['>=   1.0.0', '1.1.0', True],
    ['> 1.0.0', '1.0.1', True],
    ['>  1.0.0', '1.1.0', True],
    ['<=   2.0.0', '2.0.0', True],
    ['<= 2.0.0', '1.9999.9999', True],
    ['<=  2.0.0', '0.2.9', True],
    ['<    2.0.0', '1.9999.9999', True],
    ['<\t2.0.0', '0.2.9', True],
    ['>=0.1.97', 'v0.1.97', True],
    ['>=0.1.97', '0.1.97', True],
    ['0.1.20 || 1.2.4', '1.2.4', True],
    ['>=0.2.3 || <0.0.1', '0.0.0', True],
    ['>=0.2.3 || <0.0.1', '0.2.3', True],
    ['>=0.2.3 || <0.0.1', '0.2.4', True],
    ['||', '1.3.4', True],
    ['2.x.x', '2.1.3', True],
    ['1.2.x', '1.2.3', True],
    ['1.2.x || 2.x', '2.1.3', True],
    ['1.2.x || 2.x', '1.2.3', True],
    ['x', '1.2.3', True],
    ['2.*.*', '2.1.3', True],
    ['1.2.*', '1.2.3', True],
    ['1.2.* || 2.*', '2.1.3', True],
    ['1.2.* || 2.*', '1.2.3', True],
    ['*', '1.2.3', True],
    ['2', '2.1.2', True],
    ['2.3', '2.3.1', True],
    ['~2.4', '2.4.0', True],  #  >=2.4.0 <2.5.0
    ['~2.4', '2.4.5', True],
    ['~>3.2.1', '3.2.2', True],  #  >=3.2.1 <3.3.0,
    ['~1', '1.2.3', True],  #  >=1.0.0 <2.0.0
    ['~>1', '1.2.3', True],
    ['~> 1', '1.2.3', True],
    ['~1.0', '1.0.2', True],  #  >=1.0.0 <1.1.0,
    ['~ 1.0', '1.0.2', True],
    ['~ 1.0.3', '1.0.12', True],
    ['>=1', '1.0.0', True],
    ['>= 1', '1.0.0', True],
    ['<1.2', '1.1.1', True],
    ['< 1.2', '1.1.1', True],
    ['1', '1.0.0beta', True],
    ['~v0.5.4-pre', '0.5.5', True],
    ['~v0.5.4-pre', '0.5.4', True],
    ['=0.7.x', '0.7.2', True],
    ['>=0.7.x', '0.7.2', True],
    ['=0.7.x', '0.7.0-asdf', True],
    ['>=0.7.x', '0.7.0-asdf', True],
    ['<=0.7.x', '0.6.2', True],
    ['~1.2.1 >=1.2.3', '1.2.3', True],
    ['~1.2.1 =1.2.3', '1.2.3', True],
    ['~1.2.1 1.2.3', '1.2.3', True],
    ['~1.2.1 >=1.2.3 1.2.3', '1.2.3', True],
    ['~1.2.1 1.2.3 >=1.2.3', '1.2.3', True],
    ['~1.2.1 1.2.3', '1.2.3', True],
    ['>=1.2.1 1.2.3', '1.2.3', True],
    ['1.2.3 >=1.2.1', '1.2.3', True],
    ['>=1.2.3 >=1.2.1', '1.2.3', True],
    ['>=1.2.1 >=1.2.3', '1.2.3', True],
    ['<=1.2.3', '1.2.3-beta', True],
    ['>1.2', '1.3.0-beta', True],
    ['>=1.2', '1.2.8', True],
    ['^1.2.3', '1.8.1', True],
    ['^1.2.3', '1.2.3-beta', True],
    ['^0.1.2', '0.1.2', True],
    ['^0.1', '0.1.2', True],
    ['^1.2', '1.4.2', True],
    ['^1.2 ^1', '1.4.2', True],
    ['^1.2', '1.2.0-pre', True],
    ['^1.2.3', '1.2.3-pre', True]
]

range_cands = [
    ['1.0.0 - 2.0.0', '1.2.3', True],
    ['1.0.0', '1.0.0', True],
]


@pytest.mark.parametrize("version0, version1, expected", range_cands)
def test_range_comparision(version0, version1, expected):
    assert version1 in SemverVersion(version0) is True
